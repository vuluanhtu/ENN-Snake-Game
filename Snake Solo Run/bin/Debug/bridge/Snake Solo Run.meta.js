Bridge.assembly("Snake Solo Run", function ($asm, globals) {
    "use strict";


    var $m = Bridge.setMetadata,
        $n = ["System","Snake_Solo_Run","System.Collections.Generic","System.Threading"];
    $m("Snake_Solo_Run.App", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Main","is":true,"t":8,"sn":"Main","rt":$n[0].Void},{"a":2,"n":"Start","t":8,"sn":"Start","rt":$n[0].Void},{"a":1,"n":"Tu","is":true,"t":4,"rt":$n[1].App,"sn":"Tu"},{"a":2,"n":"nn","t":4,"rt":$n[1].NeuralNetwork,"sn":"nn"},{"a":1,"n":"nnLayer","t":4,"rt":$n[0].Array.type(System.Int32),"sn":"nnLayer"},{"a":1,"n":"random","t":4,"rt":$n[0].Random,"sn":"random"}]}; }, $n);
    $m("Snake_Solo_Run.NeuralNetwork", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].Array.type(System.Int32),$n[0].Random],"pi":[{"n":"layers","pt":$n[0].Array.type(System.Int32),"ps":0},{"n":"random","pt":$n[0].Random,"ps":1}],"sn":"ctor"},{"a":1,"n":"CreateNeurons","t":8,"sn":"CreateNeurons","rt":$n[0].Void},{"a":1,"n":"CreateWeights","t":8,"sn":"CreateWeights","rt":$n[0].Void},{"a":2,"n":"FeedFoward","t":8,"pi":[{"n":"input","pt":$n[0].Array.type(System.Single),"ps":0}],"sn":"FeedFoward","rt":$n[0].Array.type(System.Single),"p":[$n[0].Array.type(System.Single)]},{"a":2,"n":"Fitness","t":16,"rt":$n[0].Single,"g":{"a":2,"n":"get_Fitness","t":8,"rt":$n[0].Single,"fg":"Fitness","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":1,"n":"set_Fitness","t":8,"p":[$n[0].Single],"rt":$n[0].Void,"fs":"Fitness"},"fn":"Fitness"},{"a":1,"n":"Layers","t":4,"rt":$n[0].Array.type(System.Int32),"sn":"Layers"},{"a":1,"n":"neurons","t":4,"rt":$n[0].Array.type(System.Array.type(System.Single)),"sn":"neurons"},{"a":1,"n":"random","t":4,"rt":$n[0].Random,"sn":"random"},{"a":2,"n":"weights","t":4,"rt":$n[0].Array.type(System.Array.type(System.Array.type(System.Single))),"sn":"weights"},{"a":1,"backing":true,"n":"<Fitness>k__BackingField","t":4,"rt":$n[0].Single,"sn":"Fitness","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
    $m("Snake_Solo_Run.Snake", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Decision","t":8,"pi":[{"n":"member","pt":$n[1].NeuralNetwork,"ps":0}],"sn":"Decision","rt":$n[0].Void,"p":[$n[1].NeuralNetwork]},{"a":2,"n":"Game","t":8,"pi":[{"n":"a","pt":$n[0].Int32,"ps":0}],"sn":"Game","rt":$n[0].Void,"p":[$n[0].Int32]},{"a":2,"n":"GetInput","t":8,"sn":"GetInput","rt":$n[0].Array.type(System.Single)},{"a":2,"n":"LoopGame","t":8,"pi":[{"n":"a","pt":$n[0].Int32,"ps":0},{"n":"member","pt":$n[1].NeuralNetwork,"ps":1},{"n":"ms","pt":$n[0].Single,"ps":2}],"sn":"LoopGame","rt":$n[0].Void,"p":[$n[0].Int32,$n[1].NeuralNetwork,$n[0].Single]},{"a":2,"n":"Reset","t":8,"pi":[{"n":"a","pt":$n[0].Int32,"ps":0}],"sn":"Reset","rt":$n[0].Void,"p":[$n[0].Int32]},{"a":2,"n":"StartGame","t":8,"pi":[{"n":"a","pt":$n[0].Int32,"ps":0}],"sn":"StartGame","rt":$n[0].Void,"p":[$n[0].Int32]},{"a":1,"n":"aliveTime","t":4,"rt":$n[0].Single,"sn":"aliveTime","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"ax","t":4,"rt":$n[0].Single,"sn":"ax","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"ay","t":4,"rt":$n[0].Single,"sn":"ay","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"bodyDown","t":4,"rt":$n[0].Single,"sn":"bodyDown","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"bodyLeft","t":4,"rt":$n[0].Single,"sn":"bodyLeft","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"bodyRight","t":4,"rt":$n[0].Single,"sn":"bodyRight","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"bodyUp","t":4,"rt":$n[0].Single,"sn":"bodyUp","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"die","t":4,"rt":$n[0].Int32,"sn":"die","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"distance","t":4,"rt":$n[0].Single,"sn":"distance","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"foodDown","t":4,"rt":$n[0].Single,"sn":"foodDown","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"foodLeft","t":4,"rt":$n[0].Single,"sn":"foodLeft","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"foodRight","t":4,"rt":$n[0].Single,"sn":"foodRight","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"foodUp","t":4,"rt":$n[0].Single,"sn":"foodUp","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"gs","t":4,"rt":$n[0].Single,"sn":"gs","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"inputList","t":4,"rt":$n[2].List$1(System.Single),"sn":"inputList"},{"a":1,"n":"newDistance","t":4,"rt":$n[0].Single,"sn":"newDistance","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"oldDistance","t":4,"rt":$n[0].Single,"sn":"oldDistance","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"px","t":4,"rt":$n[0].Single,"sn":"px","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"py","t":4,"rt":$n[0].Single,"sn":"py","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"score","t":4,"rt":$n[0].Single,"sn":"score","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"tail","t":4,"rt":$n[0].Single,"sn":"tail","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"tc","t":4,"rt":$n[0].Single,"sn":"tc","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"timer","t":4,"rt":$n[3].Timer,"sn":"timer"},{"a":1,"n":"trail","t":4,"rt":$n[0].Array.type(System.Single),"sn":"trail"},{"a":2,"n":"vx","t":4,"rt":$n[0].Single,"sn":"vx","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"vy","t":4,"rt":$n[0].Single,"sn":"vy","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"wallDown","t":4,"rt":$n[0].Single,"sn":"wallDown","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"wallLeft","t":4,"rt":$n[0].Single,"sn":"wallLeft","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"wallRight","t":4,"rt":$n[0].Single,"sn":"wallRight","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"wallUp","t":4,"rt":$n[0].Single,"sn":"wallUp","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; }, $n);
});
